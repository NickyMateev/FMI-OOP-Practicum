#include "BankAccount.h"

BankAccount::BankAccount()
{
  person = Person();
  mystrcpy(IBAN, "UnknownIBAN");
  balance = 0;
  mystrcpy(currency, "UnknownCurrency");
}

BankAccount::BankAccount(const Person& person, const char* IBAN,double balance, const char* currency)
{
  this->person = person;
  mystrcpy(this->IBAN, IBAN);
  this->balance = balance;
  mystrcpy(this->currency, currency);
}

BankAccount::BankAccount(const BankAccount& other)
{
  this->person = other.person;
  mystrcpy(this->IBAN, other.IBAN);
  this->balance = other.balance;
  mystrcpy(this->currency, other.currency);
}

BankAccount& BankAccount::operator=(const BankAccount& other)
{
  if(this != &other)
  {
    delete[] this->IBAN;
    delete[] this->currency;

    this->person = other.person;
    mystrcpy(this->IBAN, other.IBAN);
    this->balance = other.balance;
    mystrcpy(this->currency, other.currency);
  }
  return *this;
}

BankAccount::~BankAccount()
{
  delete[] IBAN;
  delete[] currency;
}

Person BankAccount::getPerson() const
{
  return person;
}

const char* BankAccount::getIBAN() const
{
  return IBAN;
}

double BankAccount::getBalance() const
{
  return balance;
}

const char* BankAccount::getCurrency() const
{
  return currency;
}

void BankAccount::setPerson(const Person& person)
{
  this->person = person;
}

void BankAccount::setIBAN(const char* IBAN)
{
  delete[] this->IBAN;
  mystrcpy(this->IBAN, IBAN);
}

void BankAccount::setBalance(double balance)
{
  this->balance = balance;
}

void BankAccount::setCurrency(const char* currency)
{
  delete[] this->currency;
  mystrcpy(this->currency, currency);
}

void BankAccount::Deposit(double amount)
{
  balance += amount;
}

void BankAccount::Withdraw(double amount)
{
  if(amount <= balance)
    balance -= amount;
}
